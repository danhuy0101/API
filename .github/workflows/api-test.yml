# Name of the process
name: Laravel CI/CD with Newman Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from repository
      - name: Checkout Code ⚙️
        uses: actions/checkout@v4

      # Step 2: Create .env file with hardcoded values
      - name: Create Laravel .env file 🔧
        run: |
          echo "🔧 Creating Laravel .env file..."
          cat > sprint5-with-bugs/API/.env << 'EOF'
          APP_NAME=Toolshop
          APP_VERSION=5
          APP_ENV=local
          APP_KEY=base64:hJawExRAnwWOUI0a/YBWH+yRHJWCKYpwItOUFQdcFo4=
          JWT_SECRET=XVVuj9s7byIX8XPNWt0aYOsFjmc4JZQmE2wR7h9IJXoEOWXwk6o6wM8AKUL7jUTy
          APP_DEBUG=true
          APP_URL=http://localhost:8091
          APP_TIMEZONE=Europe/Amsterdam

          LOG_CHANNEL=stack
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_DATABASE=toolshop
          DB_USERNAME=root
          DB_PASSWORD=root

          BROADCAST_DRIVER=log
          CACHE_DRIVER=file
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=database
          SESSION_DRIVER=file
          SESSION_LIFETIME=120

          MAIL_MAILER=smtp
          MAIL_HOST=mailcatcher
          MAIL_PORT=1025
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          EOF
          echo "✅ .env file created successfully."

      # Step 3: Start Docker Containers
      - name: Start Docker Containers
        run: docker compose up -d

      # Step 4: Wait for Services
      - name: Wait for Services
        run: sleep 60
        shell: bash

      # Step 5: Setup Application
      - name: Setup Application 🔧
        run: |
          echo " Installing Composer dependencies..."
          # Using the 'composer' service defined in docker-compose.yml
          docker compose run --rm composer

          echo " Fixing permissions..."
          # Grant access permissions for the storage and cache directories
          docker compose exec -T -u root laravel-api chown -R www-data:www-data /var/www/storage /var/www/bootstrap/cache

          echo " Running database migrations and seeding..."
          # Run migrate & seed
          docker compose exec -T laravel-api php artisan migrate:fresh --seed --force

      # Step 6: Install Node.js & Newman
      - name: Install Node.js & Newman
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - run: npm install -g newman newman-reporter-htmlextra

      # Step 7: Run Newman Tests
      - name: Run Newman Tests
        # Newman here
        run: newman run "tests/api/test.postman_collection.json" --iteration-data "tests/api/login.json" --reporters "cli,htmlextra" --reporter-htmlextra-export "tests/api/report/detailed-result.html" --reporter-htmlextra-title "API Login Tests Report" --reporter-htmlextra-logs --verbose --suppress-exit-code

      # Step 8: Upload Test Report (always run)
      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-report
          path: tests/api/report/detailed-result.html

      # Step 9: Cleanup (always run)
      - name: Cleanup
        if: always()
        run: docker compose down -v
